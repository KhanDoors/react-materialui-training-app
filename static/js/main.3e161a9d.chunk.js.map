{"version":3,"sources":["components/Exercises/Form.js","components/Exercises/Dialog.js","components/layouts/Header.js","components/layouts/Footer.js","components/Exercises/index.js","store.js","App.js","index.js"],"names":["Form","state","_this","getInitState","handleChange","name","_ref","value","target","setState","Object","defineProperty","handleSubmit","props","onSubmit","objectSpread","id","title","toLocaleLowerCase","replace","_ref2","toLowerCase","exercise","this","description","muscles","_this$state","_this$props","categories","react_default","a","createElement","TextField_default","label","onChange","margin","fullWidth","FormControl_default","InputLabel_default","htmlFor","Select_default","map","category","MenuItem_default","key","multiline","rows","Button_default","color","variant","onClick","disabled","Component","Create","open","handleToggle","handleFormSubmit","onCreate","react","index_es","mini","icons_index_es","onClose","maxWidth","Exercises_Form","Header","onExerciseCreate","AppBar_default","position","style","backgroundColor","padding","Toolbar_default","Typography_default","flex","Dialog","withWidth","onSelect","width","index","findIndex","group","Tabs_default","e","indicatorColor","textColor","centered","scrollable","Tab_default","withStyles","theme","_paper","_container","paper","spacing","unit","overflowY","breakpoints","up","marginTop","height","down","@global","html, body, #root","container","item","classes","exercises","editMode","_ref$exercise","_ref$exercise$title","_ref$exercise$descrip","onDelete","onSelectEdit","onEdit","className","xs","sm","_ref3","slicedToArray","textTransform","component","_ref4","button","primary","gutterBottom","App","handleCategorySelect","handleExerciseSelect","find","ex","handleExerciseCreate","toConsumableArray","concat","handleExerciseDelete","filter","handleExerciseSelectEdit","handleExerciseEdit","_ref5","initExercises","reduce","console","log","entries","getExercisesByMuscles","CssBaseline_default","layouts_Header","Exercises","layouts_Footer","createMuiTheme","palette","red","secondary","main","indigo","A700","light","dark","type","ReactDOM","render","core_styles","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3e161a9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Form extends Component {\n  state = this.getInitState();\n\n  getInitState() {\n    const { exercise } = this.props;\n\n    return exercise\n      ? exercise\n      : {\n          title: \"\",\n          description: \"\",\n          muscles: \"\"\n        };\n  }\n\n  handleChange = name => ({ target: { value } }) =>\n    this.setState({\n      [name]: value\n    });\n\n  handleSubmit = () => {\n    // TODO: validate\n\n    this.props.onSubmit({\n      id: this.state.title.toLocaleLowerCase().replace(/ /g, \"-\"),\n      ...this.state\n    });\n  };\n\n  handleChange = name => ({ target: { value } }) =>\n    this.setState({\n      [name]: value\n    });\n\n  handleSubmit = () => {\n    this.props.onSubmit({\n      id: this.state.title.toLowerCase().replace(/ /g, \"-\"),\n      ...this.state\n    });\n  };\n\n  render() {\n    const { title, description, muscles } = this.state,\n      { exercise, muscles: categories } = this.props;\n\n    return (\n      <form>\n        <TextField\n          label=\"Title\"\n          value={title}\n          onChange={this.handleChange(\"title\")}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n        <FormControl fullWidth>\n          <InputLabel htmlFor=\"muscles\">Muscles</InputLabel>\n          <Select value={muscles} onChange={this.handleChange(\"muscles\")}>\n            {categories.map(category => (\n              <MenuItem key={category} value={category}>\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n        <TextField\n          multiline\n          rows=\"4\"\n          label=\"Description\"\n          value={description}\n          onChange={this.handleChange(\"description\")}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={this.handleSubmit}\n          disabled={!title || !muscles}\n        >\n          {exercise ? \"Edit\" : \"Create\"}\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport Form from \"./Form\";\n\nclass Create extends Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFormSubmit = exercise => {\n    this.handleToggle();\n\n    this.props.onCreate(exercise);\n  };\n\n  render() {\n    const { open } = this.state,\n      { muscles } = this.props;\n\n    return (\n      <Fragment>\n        <Button\n          color=\"secondary\"\n          variant=\"fab\"\n          onClick={this.handleToggle}\n          mini\n        >\n          <Add />\n        </Button>\n\n        <Dialog open={open} onClose={this.handleToggle} fullWidth maxWidth=\"xs\">\n          <DialogTitle>Create a New Exercise</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Please fill out the form below.\n            </DialogContentText>\n            <Form muscles={muscles} onSubmit={this.handleFormSubmit} />\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\nexport default Create;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CreateDialog from \"../Exercises/Dialog\";\n\nfunction Header({ muscles, onExerciseCreate }) {\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        backgroundColor: \"#2f2f2f\",\n        padding: \"5px\"\n      }}\n    >\n      <Toolbar>\n        <Typography variant=\"headline\" color=\"secondary\" style={{ flex: 1 }}>\n          Exercise Database\n        </Typography>\n        <CreateDialog muscles={muscles} onCreate={onExerciseCreate} />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nfunction Footer({ muscles, category, onSelect, width }) {\r\n  const index = category\r\n    ? muscles.findIndex(group => group === category) + 1\r\n    : 0;\r\n\r\n  const onIndexSelect = (e, index) =>\r\n    onSelect(index === 0 ? \"\" : muscles[index - 1]);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Tabs\r\n        value={index}\r\n        onChange={onIndexSelect}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        centered={width !== \"xs\"}\r\n        scrollable={width === \"xs\"}\r\n      >\r\n        <Tab label=\"All\" />\r\n        {muscles.map(group => (\r\n          <Tab key={group} label={group} />\r\n        ))}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withWidth()(Footer);\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Form from \"./Form\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 3,\r\n    overflowY: \"auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: 5,\r\n      height: \"calc(100% - 10px)\"\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"100%\"\r\n    }\r\n  },\r\n  \"@global\": {\r\n    \"html, body, #root\": {\r\n      height: \"100%\"\r\n    }\r\n  },\r\n  container: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"calc(100% - 64px - 48px)\"\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"calc(100% - 56px - 48px)\"\r\n    }\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"50%\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  ({\r\n    classes,\r\n    muscles,\r\n    exercises,\r\n    category,\r\n    editMode,\r\n    onSelect,\r\n    exercise,\r\n    exercise: {\r\n      id,\r\n      title = \"Welcome!\",\r\n      description = \"Please select an exercise from the list on the left.\"\r\n    },\r\n    onDelete,\r\n    onSelectEdit,\r\n    onEdit\r\n  }) => (\r\n    <Grid container className={classes.container}>\r\n      <Grid item className={classes.item} xs={12} sm={6}>\r\n        <Paper className={classes.paper}>\r\n          {exercises.map(\r\n            ([group, exercises]) =>\r\n              !category || category === group ? (\r\n                <Fragment key={group}>\r\n                  <Typography\r\n                    color=\"secondary\"\r\n                    variant=\"headline\"\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {group}\r\n                  </Typography>\r\n                  <List component=\"ul\">\r\n                    {exercises.map(({ id, title }) => (\r\n                      <ListItem key={id} button onClick={() => onSelect(id)}>\r\n                        <ListItemText primary={title} />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton\r\n                            color=\"primary\"\r\n                            onClick={() => onSelectEdit(id)}\r\n                          >\r\n                            <Edit />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            color=\"primary\"\r\n                            onClick={() => onDelete(id)}\r\n                          >\r\n                            <Delete />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Fragment>\r\n              ) : null\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item className={classes.item} xs={12} sm={6}>\r\n        <Paper className={classes.paper}>\r\n          <Typography gutterBottom variant=\"display1\" color=\"secondary\">\r\n            {title}\r\n          </Typography>\r\n          {editMode ? (\r\n            <Form\r\n              key={id}\r\n              exercise={exercise}\r\n              muscles={muscles}\r\n              onSubmit={onEdit}\r\n            />\r\n          ) : (\r\n            <Typography variant=\"subheading\">{description}</Typography>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n);\r\n","export const muscles = [\"shoulders\", \"chest\", \"arms\", \"back\", \"legs\"];\r\n\r\nexport const exercises = [\r\n  {\r\n    id: \"overhead-press\",\r\n    title: \"Overhead Press\",\r\n    description: \"Delts exercise...\",\r\n    muscles: \"shoulders\"\r\n  },\r\n  {\r\n    id: \"dips\",\r\n    title: \"Dips\",\r\n    description: \"Triceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"barbell-curls\",\r\n    title: \"Barbell Curls\",\r\n    description: \"Biceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"bench-press\",\r\n    title: \"Bench Press\",\r\n    description: \"Chest exercise...\",\r\n    muscles: \"chest\"\r\n  },\r\n  {\r\n    id: \"pull-ups\",\r\n    title: \"Pull Ups\",\r\n    description: \"Back and biceps exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"deadlifts\",\r\n    title: \"Deadlifts\",\r\n    description: \"Back and leg exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"squats\",\r\n    title: \"Squats\",\r\n    description: \"Legs exercise...\",\r\n    muscles: \"legs\"\r\n  }\r\n];\r\n","import React, { Component, Fragment } from \"react\";\nimport { Header, Footer } from \"./components/layouts/index\";\nimport Exercises from \"./components/Exercises/index\";\nimport { muscles, exercises } from \"./store.js\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    exercises,\n    exercise: {}\n  };\n\n  getExercisesByMuscles() {\n    const initExercises = muscles.reduce(\n      (exercises, category) => ({\n        ...exercises,\n        [category]: []\n      }),\n      {}\n    );\n\n    console.log(muscles, initExercises);\n\n    return Object.entries(\n      this.state.exercises.reduce((exercises, exercise) => {\n        const { muscles } = exercise;\n\n        exercises[muscles] = [...exercises[muscles], exercise];\n\n        return exercises;\n      }, initExercises)\n    );\n  }\n\n  handleCategorySelect = category =>\n    this.setState({\n      category\n    });\n\n  handleExerciseSelect = id =>\n    this.setState(({ exercises }) => ({\n      exercise: exercises.find(ex => ex.id === id),\n      editMode: false\n    }));\n\n  handleExerciseCreate = exercise =>\n    this.setState(({ exercises }) => ({\n      exercises: [...exercises, exercise]\n    }));\n\n  handleExerciseDelete = id =>\n    this.setState(({ exercises, exercise, editMode }) => ({\n      exercises: exercises.filter(ex => ex.id !== id),\n      editMode: exercise.id === id ? false : editMode,\n      exercise: exercise.id === id ? {} : exercise\n    }));\n\n  handleExerciseSelectEdit = id =>\n    this.setState(({ exercises }) => ({\n      exercise: exercises.find(ex => ex.id === id),\n      editMode: true\n    }));\n\n  handleExerciseEdit = exercise => {\n    this.setState(({ exercises }) => ({\n      exercises: [...exercises.filter(ex => ex.id !== exercise.id), exercise],\n      exercise\n    }));\n  };\n\n  render() {\n    const exercises = this.getExercisesByMuscles(),\n      { category, exercise, editMode } = this.state;\n\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Header\n          muscles={muscles}\n          onExerciseCreate={this.handleExerciseCreate}\n        />\n        <Exercises\n          exercise={exercise}\n          category={category}\n          exercises={exercises}\n          editMode={editMode}\n          muscles={muscles}\n          onSelect={this.handleExerciseSelect}\n          onDelete={this.handleExerciseDelete}\n          onSelectEdit={this.handleExerciseSelectEdit}\n          onEdit={this.handleExerciseEdit}\n        />\n        <Footer\n          category={category}\n          muscles={muscles}\n          onSelect={this.handleCategorySelect}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\nimport indigo from \"@material-ui/core/colors/indigo\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: {\n      main: indigo.A700,\n      light: indigo[600],\n      dark: indigo[300]\n    },\n    type: \"dark\"\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}